1、类、结构等数据成员的命名形式为：_XMyClass
2、枚举类型形式为：THIS_IS_ENUM
3、类的头文件需要一次包含的限制，形式为
	#ifdef _JIA_HFILENAME_
	#define _JIA_HFILENAME_
	.......
	#endif
4、一般的类的功能接口规范如下
	初始化  _XBool init(...);
	更新	void move(...);
	描绘	void draw();
5、函数和变量首字母小写，成员变量以m_开头
6、引擎核心库的命名以X开头，非核心库以G开头，非核心库经过严格的测试和检查之后需要合并到核心库的需要修改命名规则。
7、boolean类型的变量统一使用_XBool，尽量避免使用其他类型的boolean类型。
8、每个类都需要有对应的测试工程
9、同一个h和cpp文件中最好只包含一个类的定义，而不是多个类的定义包含在同一套h和cpp中。
10、每次SVN更新都需要有相应的注释
11、版本说明和作者说明需要写在每个h文件以及cpp文件的头部
12、文件夹后缀说明
	无后缀：代码已经程序当时经过测试可以运行
	T后缀：代码上没有实现，工程为空
	I后缀：代码可以运行，但是尚未进行本地化，或者本地化尚不成熟。
	C后缀：客户端
	S后缀：服务器
13、成员变量以小写字母开头
14、成员方法以大写字母开头(尚未完成)

小点滴：
1、利用类或者基类中的static成员获取类的状态，然后通过同样的函数调用读取所有类成员的状态

class base
{
public:
	static base *p
}

class A:public base
{
public:
	void mouseDown()
	{
		p = this;
		.......
	}
}

base * getNowMouseDown() {return base::p;}